minisphere Changelog
====================

v1.4.1 - June 22, 2015
----------------------

* Fixes a bug where top-level variables defined in a CoffeeScript script were
  not available from outside when using RequireScript().
* Fixes off-by-one rendering issues for a few graphics primitives, such as
  Line().

v1.4.0 - June 21, 2015
----------------------

* CoffeeScript support!
* The engine and all dependencies have been recompiled optimizing for speed.
  This slightly increases the size of the engine but greatly improves
  performance for CPU-bound tasks such as ColorMatrix application.

v1.3.2 - June 20, 2015
----------------------

* More informative error message when game() function doesn't exist, no more
  vague "not callable" errors!
* Zone scripts are now fired once immediately on the first step inside the zone,
  regardless of the step count set. This matches Sphere 1.5 behavior.
* Fixes Z-ordering glitches after looping around a repeating map.
* GetPersonX(), GetPersonY() are now properly normalized on repeating maps.

v1.3.1 - June 18, 2015
----------------------

* Fixes parallax camera sync issues, for reals this time!
* Adds a new API, GetActivePerson(), which can be called inside a talk or touch
  script to get the name of the person responsible for triggering the event.
* Fixes an engine crash when a person under the control of FollowPerson is
  destroyed in the middle of a diagonal movement.
* Changes target of the SphereFS ~usr/ prefix to <UserDocuments>/Sphere Files.
  This makes it easily accessible under Windows and ensures more sane placement
  when the engine is run under Wine.
* Fixes a regression introduced in 1.3.0 where player input is accepted even
  though the input person's command queue is not empty.
* Fixes a bug where zones loaded from a map file may randomly not fire.
* Fixes a bug where talk scripts won't run if commands were queued for the input
  person on the same frame the talk key is pressed.

v1.3.0 - June 17, 2015
----------------------

* SphereFS support! This provides new directory aliases (~usr/, ~sys/, ~sgm/)
  with more predictable semantics than the classic ~/ alias, which is of course
  maintained for backwards compatibility.
* Sphere Package format (.spk) support!
* 4-player support in map engine (AttachPlayerInput() et al.)
* Support for Sphere ColorMatrix objects.
* Support for zlib compression and decompression of ByteArrays.


v1.2.4 - June 11, 2015
----------------------

* Fixes mysterious "invalid base value" errors when a built-in constructor is
  shadowed by a global variable with the same name.

v1.2.3 - June 10, 2015
----------------------

* Fixes a bug where calling RawFile:close() may cause a crash when the RawFile
  object is later GC'd due a double fclose(). Affected Linux and possibly other
  platforms as well.
* Allows GetKey() to detect Ctrl, Alt, and Shift key presses.
* Fixes incorrect handling of tab characters during text rendering.
* Persons positioned on a hidden layer will no longer be hidden. This matches
  the behavior of Sphere 1.5.
* Fixes incorrect rendering of text containing non-ASCII characters. Note that
  some characters such as the euro sign (€) and trademark symbol (™) will be
  substituted with placeholders due to differences between the Unicode and
  Windows-1252 codepages.

v1.2.2 - June 8, 2015
---------------------

* Fixes map-defined BGM not playing--by implementing the feature. Nobody can say
  I'm not dedicated to compatibility!

v1.2.1 - June 7, 2015
---------------------

* Fixes a regression in GetCurrentZone() and GetCurrentTrigger() where an
  index is returned.
* Fixes out-of-sync scrolling issues with parallax layers on non-repeating maps.
* Fixes a bug in Font:wordWrapString() where text ending on a wrap boundary can
  cause the last word to be lost.

v1.2.0 - June 6, 2015
---------------------

* CommonJS module support!
* Globals are now accessible via the Sphere object. With this, global variables
  can be created from strict mode code, where it would normally be flagged as an
  error. This is similar to the 'window' object in a browser:
      Sphere.myVar = 812;
      Sphere.GetKey();
      // etc.
* New Zone and Trigger management APIs.
* Included kh2Bar can now be used as both a module and with a traditional
  RequireSystemScript() call.
* Font:clone() now works correctly.
* Fixes crashes under rare circumstances in Font:wordWrapString(). Also properly
  wraps long stretches of characters with no whitespace.
* Fixes a bug where replacing a glyph image fails to update the font metrics,
  causing rendering issues.
* More complete API documentation.


v1.1.8 - June 2, 2015
---------------------

* Fixes too-fast animation when persons are moved diagonally.
* Fixes a bug where queueing diagonal movement commands has no effect.

v1.1.7 - June 1, 2015
---------------------

* Fixes an occasional crash when calling ExecuteGame().

v1.1.6 - May 31, 2015
---------------------

* The third argument ('is_immediate') to the QueuePersonCommand() and
  QueuePersonScript() APIs is now optional. If not provided, the default is
  false.
* Fixes a startup crash when XInput is not found or fails to initialize.
* Fixes a startup crash on systems with no sound support.
* Fixes some extension strings having been coalesced due to a missing comma in
  the source. Seriously, who ever thought coalescing string literals was a good
  idea?

v1.1.5 - May 28, 2015
---------------------

* Improved zone and trigger handling. Triggers will now fire even if input is
  attached after the trigger is stepped on. This fixes triggers in Kefka's
  Revenge.
* Fixes a bug where the input person can be moved while following another
  person.
* Proper handling of degenerate rects in spritesets and zones, which caused
  collision checks to fail.
* Fixes a regression where calling IsKeyPressed() in a loop to wait for key
  release would lock up the engine (yes, again).
* Updates the map engine to use the new input routines, to take advantage of the
  sticky-keys fix in v1.1.3.

v1.1.4 - May 26, 2015
---------------------

* Cleanup to Script Error screen: Subdirectory information is now shown for
  script filenames and the error location is displayed on a separate line from
  the error text.
* Evaluating non-UTF-8 scripts with extended characters no longer causes the
  engine to fail.
* Font:wordWrapString() now correctly handles newlines.

v1.1.3 - May 25, 2015
---------------------

* GetToggleState() is implemented--finally.
* Keys should no longer get "stuck" when using Alt+Tab to switch away from the
  engine during gameplay.
* Filename of map is now shown when an error occurs in an embedded script.

v1.1.2 - May 23, 2015
---------------------

* GLSL shader support! Shaders are loaded from <game_dir>/shaders by default.
  To use:
    var shader = new ShaderProgram({ vertex: 'vs.glsl', fragment: 'fs.glsl');
    var group = new Group(shapeList, shader);
    // work with Group object as before

v1.1.1 - May 20, 2015
---------------------

* Fixes an issue where windowstyles with component images smaller than 16x16
  weren't tiled properly, due to an Allegro limitation.
* Full MNG animation support.  No FLIC though.  That's an ancient format anyway
  though, not really worth supporting.
* Fixes GradientCircle (finally!) and adds missing circle methods to Surfaces.
* New RNG.name() API: Generates a random string of letters which you can use
  internally to differentiate objects.

v1.1.0 - May 17, 2015
---------------------

This is an absolutely MASSIVE release.  Note: minisphere is now BSD-licensed.
This basically gives you absolute freedom to do with the engine and associated
source code what you wish, so long as you don't misrepresent yourself as the
author.

* Fixes a ton of bugs discovered since the release of minisphere 1.0.10,
  including a SetPersonScript() crash when passing JS functions.
* Now using Allegro 5.1.10.
* Native 64-bit engine included (engine64.exe).
* New "Console" builds of minisphere (console.exe and console64.exe) for
  Windows. This version of the engine displays a console window like a debug
  build (enabling minisphere's Print() function to work), but is fully
  optimized.
* Constructors and properties for all core Sphere objects:
      var sound = new Sound("munch.wav");
      sound.volume = 128;
      sound.play(false);
* Massive performance improvements, both to rendering as well as resource
  loading. Most assets load lightning fast!
* Key mappings for GetPlayerKey() can now be set programmatically via the new
  SetPlayerKey() API; these changes will be saved per-game and loaded along with
  that game's game.sgm.
* Assert(), a useful debugging tool. Throws an error if the asserted condition
  fails, a no-op otherwise. In the Console build, also gives you the option to
  ignore the failed assert and continue.
* Async(), queues a script to run on the next FlipScreen(). Similar to what
  setTimeout() does in a browser and required for, e.g. compliance with the
  Promises/A+ spec.
* TurboSphere-inspired "Galileo" graphics API, which allows scenes to be
  composed ahead of time using Shape and Group objects.
* TurboSphere-inspired Sockets API, with separate ListeningSocket and
  IOSocket objects. Sphere 1.5 sockets are still supported.
* Built-in MT19937-based random number generator, including a method
  (`RNG.normal`) to generate normally-distributed random values.
* Includes miniRT, a unified set of system scripts including a cooperative
  threading engine, cutscene engine, the Link query library, and a full-featured
  console, among other goodies. Simply add this to the top of your main script:
      RequireSystemScript('mini/miniRT.js');
* The engine now searches <game_dir>/scripts/lib for system scripts before
  looking in the system directory.
* API documentation is included in the default distribution. It may be somewhat
  incomplete, however...
* Playback position in Sounds can be set with microsecond precision.
* Overhauled FollowPerson() algorithm: Followers move under their own
  power and are affected by obstructions, making the overall effect much
  more pleasing.
* New API functions to manage persons with followers:
      GetPersonLeader()
      GetPersonFollowers()
      GetPersonFollowDistance()
      SetPersonFollowDistance()
* New path escape: `#~/path/to/file` specifies a path which is relative to the
  engine's system directory.


v1.0.10 - April 16, 2015
------------------------

* Experimental 64-bit engine (needs testing).
* Fixes IsKeyPressed() not recognizing modifier keys on right side of
  keyboard (#20).
* Improves SetPersonFrame compatibility (out-of-range frame is now
  wrapped instead of throwing an error).
* Fixes SetPersonFrame not resetting frame delay timer.
* Fixes a joystick assert error when running minisphere in OS X. (#19)
* Fixes wrong direction being rendered for 4-direction person sprites
  moving diagonally.
* Fixes random deadlocks when playing sounds.
* Adds some API functions from Sphere 1.6+.
