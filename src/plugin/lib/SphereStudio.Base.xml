<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SphereStudio.Base</name>
    </assembly>
    <members>
        <member name="T:SphereStudio.UI.ColorBox">
            <summary>
            A visual color box component.
            </summary>
        </member>
        <member name="E:SphereStudio.UI.ColorBox.ColorChanged">
            <summary>
            Event handler; triggered after the color has been changed.
            </summary>
        </member>
        <member name="E:SphereStudio.UI.ColorBox.ColorChanging">
            <summary>
            Event handler; triggered when a color is going to change.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ColorBox.#ctor">
            <summary>
            Initializes a new instance of a ColorBox
            </summary>
        </member>
        <member name="P:SphereStudio.UI.ColorBox.SelectedColor">
            <summary>
            The color that is present in this color box.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.ColorBox.Selected">
            <summary>
            Gets or sets whether or not it's in a selected state.
            </summary>
        </member>
        <member name="F:SphereStudio.UI.ColorBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ColorBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SphereStudio.UI.ColorBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SphereStudio.UI.ImageEditor">
            <summary>
            Defers image editing functionality to the active Image plugin.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.#ctor">
            <summary>
            Constructs an Image Editor control.
            </summary>
        </member>
        <member name="E:SphereStudio.UI.ImageEditor.ImageChanged">
            <summary>
            Fires when the image is modified.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.ImageEditor.Content">
            <summary>
            Gets the image contents as a Bitmap.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.GetImages(System.Int16,System.Int16)">
            <summary>
            Splits the image into tiles and returns the tile bitmaps.
            </summary>
            <param name="tileWidth">Tile width.</param>
            <param name="tileHeight">Tile height.</param>
            <returns>An array of tile bitmaps.</returns>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.ZoomIn">
            <summary>
            Zooms in the image by one level.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.ZoomOut">
            <summary>
            Zooms out the image by one level.
            </summary>
        </member>
        <member name="F:SphereStudio.UI.ImageEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SphereStudio.UI.ImageEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SphereStudio.UI.ScriptEditor">
            <summary>
            Defers code editing functionality to the active Script plugin.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ScriptEditor.#ctor">
            <summary>
            Constructs a Script Editor control.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.ScriptEditor.Text">
            <summary>
            Gets or sets the contents of the script.
            </summary>
        </member>
        <member name="F:SphereStudio.UI.ScriptEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.ScriptEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SphereStudio.UI.ScriptEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SphereStudio.UI.DialogHeader">
            <summary>
            A dialog header which automatically adapts to the UI style.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.DialogHeader.#ctor">
            <summary>
            Constructs a new instance of a DialogHeader.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.DialogHeader.ApplyStyle(SphereStudio.Base.UIStyle)">
            <summary>
            Called by the IDE to style the control.
            </summary>
            <param name="style"></param>
        </member>
        <member name="T:SphereStudio.UI.SnapPanel">
            <summary>
            A fast drawing panel for editing with support for snap-to-grid.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.SnapPanel.#ctor">
            <summary>
            Constructs a SnapPanel.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.SnapPanel.XSnap">
            <summary>
            Gets or sets the grid snap size on the X axis.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.SnapPanel.YSnap">
            <summary>
            Gets or sets the grid snap size of the Y axis.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.SnapPanel.ScrollToControl(System.Windows.Forms.Control)">
            <summary>
            Overrides ScrollToControl to prevent the panel from auto-scrolling.
            </summary>
            <param name="activeControl">Some control or other, we just ignore it.</param>
            <returns>The display location of where you wanted to be.</returns>
        </member>
        <member name="M:SphereStudio.UI.SnapPanel.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Overrides the default scroll behavior to add grid snapping.
            </summary>
            <param name="se">The scrolling properties.</param>
        </member>
        <member name="T:SphereStudio.UI.StringInputForm">
            <summary>
            Represents a form that allows the user to enter a line of text.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.StringInputForm.#ctor(System.String,System.String)">
            <summary>
            Initializes the string input form.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.StringInputForm.NumOnly">
            <summary>
            Set this to use numbers only or not.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.StringInputForm.Input">
            <summary>
            The string inputted into the form.
            </summary>
        </member>
        <member name="P:SphereStudio.UI.StringInputForm.MaxLength">
            <summary>
            Use this to limit the number of characters one can input.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.StringInputForm.ApplyStyle(SphereStudio.Base.UIStyle)">
            <summary>
            Restyles the form using a UI style.
            </summary>
            <param name="style"></param>
        </member>
        <member name="F:SphereStudio.UI.StringInputForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SphereStudio.UI.StringInputForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SphereStudio.UI.StringInputForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.ICompiler">
            <summary>
            Specifies the base interface for a compiler.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ICompiler.Prep(SphereStudio.Base.IProject,SphereStudio.Base.IConsole)">
            <summary>
            Prepare a new project for use with this compiler.
            </summary>
            <param name="project">The project to prepare.</param>
            <param name="con">An IConsole where project prep progress can be printed.</param>
            <returns>true if the project was successfully prepared.</returns>
        </member>
        <member name="M:SphereStudio.Base.ICompiler.Build(SphereStudio.Base.IProject,System.String,SphereStudio.Base.IConsole)">
            <summary>
            Builds a game distribution from a Sphere Studio project.
            </summary>
            <param name="project">The project to build.</param>
            <param name="outPath">The pathname of the directory where the distribution will be created.</param>
            <param name="con">An IConsole where compiler output will be sent.</param>
            <returns>'true' if compilation succeeded, false if not.</returns>
        </member>
        <member name="T:SphereStudio.Base.IPackager">
            <summary>
            Specifies the interface for a packaging compiler.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IPackager.SaveFileFilters">
            <summary>
            Gets a list of package file filters, in the same format as used for
            SaveFileDialog.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IPackager.Package(SphereStudio.Base.IProject,System.String,SphereStudio.Base.IConsole)">
            <summary>
            Builds a game package from a Sphere Studio project.
            </summary>
            <param name="project">The project to build.</param>
            <param name="fileName">The pathname of the package. If this file exists, it will be overwritten.</param>
            <param name="con">An IConsole where compiler output will be sent.</param>
            <returns>'true' if packaging succeeded, false if not.</returns>
        </member>
        <member name="T:SphereStudio.Base.IConsole">
            <summary>
            Specifies the interface for a text console, as used for, e.g.
            the build system.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IConsole.Print(System.String)">
            <summary>
            Prints text to the console. Newlines must be printed manually.
            </summary>
            <param name="text">The text to be printed.</param>
        </member>
        <member name="T:SphereStudio.Base.ICore">
            <summary>
            Specifies an interface for communication with the Sphere Studio IDE.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICore.Settings">
            <summary>
            Provides access to the Sphere Studio core settings.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICore.Project">
            <summary>
            Provides access to the project settings.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICore.ActiveDocument">
            <summary>
            Gets the DocumentView of the document being edited.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICore.Docking">
            <summary>
            Gets the interface to the IDE dock manager.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICore.Style">
            <summary>
            Gets the IDE's current UI style.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.ICore.LoadProject">
            <summary>
            Fires when a project is loaded into the IDE.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.ICore.UnloadProject">
            <summary>
            Fires when an open project is closed.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.ICore.TestGame">
            <summary>
            Fires when the Test Game or Debug commands are chosen.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ICore.AddMenuItem(System.Windows.Forms.ToolStripMenuItem,System.String)">
            <summary>
            Add a new root level item to the Sphere Studio menu bar.
            </summary>
            <param name="item">The ToolStripMenuItem to add.</param>
            <param name="before">The name of the item you want to appear before, or none</param>
        </member>
        <member name="M:SphereStudio.Base.ICore.AddMenuItem(System.String,System.Windows.Forms.ToolStripItem)">
            <summary>
            Add a new item to a sub-menu of the Sphere Studio menu bar.
            </summary>
            <param name="location">Ex: 'View' or 'View.extra1.extra2'</param>
            <param name="newItem">The ToolStripMenuItem to add.</param>
        </member>
        <member name="M:SphereStudio.Base.ICore.OpenFile(System.String)">
            <summary>
            Opens a file as a document in the IDE.
            </summary>
            <param name="fileName">The full path of the file to open.</param>
            <returns>The DocumentView for the opened file.</returns>
        </member>
        <member name="M:SphereStudio.Base.ICore.RemoveMenuItem(System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu item from it's containing drop down menu.
            </summary>
            <param name="item">The ToolStripMenuItem to remove.</param>
        </member>
        <member name="M:SphereStudio.Base.ICore.RemoveMenuItem(System.String)">
            <summary>
            Removes a root level menu item with the associated name.
            </summary>
            <param name="name">The name of the item to remove; Ex: 'View'.</param>
        </member>
        <member name="T:SphereStudio.Base.ICoreSettings">
            <summary>
            Specifies the interface for ICore.Settings.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.ProjectPaths">
            <summary>
            Gets the list of directory paths Sphere Studio is monitoring for projects.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.Engine">
            <summary>
            Gets the registered name of the current engine starter plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.Compiler">
            <summary>
            Gets the registered name of the current compiler plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.FileOpener">
            <summary>
            Gets the registered name of the current default file opener plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.ScriptEditor">
            <summary>
            Gets the registered name of the current script editor plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ICoreSettings.ImageEditor">
            <summary>
            Gets the registered name of the current image editor plugin.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IDock">
            <summary>
            Specifies the interface for the dock panel manager.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDock.Refresh">
            <summary>
            Refreshes the dock and updates it with any new and removed panes.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDock.Activate(SphereStudio.Base.IDockPane)">
            <summary>
            Activates a dock pane, giving it focus. Has no effect if the pane is hidden.
            </summary>
            <param name="pane"></param>
        </member>
        <member name="M:SphereStudio.Base.IDock.Show(SphereStudio.Base.IDockPane)">
            <summary>
            Shows a registered dock pane. If it is already visible, does nothing.
            </summary>
            <param name="pane">The dock pane to show.</param>
        </member>
        <member name="M:SphereStudio.Base.IDock.Hide(SphereStudio.Base.IDockPane)">
            <summary>
            Hides a registered dock pane. If it is already hidden, does nothing.
            </summary>
            <param name="pane">The dock pane to hide.</param>
        </member>
        <member name="T:SphereStudio.Base.PauseReason">
            <summary>
            Specifies the reason debug execution was halted.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.PauseReason.Breakpoint">
            <summary>
            A breakpoint was triggered.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.PauseReason.Exception">
            <summary>
            An exception is about to be thrown.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.PausedEventArgs">
            <summary>
            Specifies data for a Paused debugger event.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.PausedEventArgs.#ctor(SphereStudio.Base.PauseReason)">
            <summary>
            Constructs data for a Paused debugger event.
            </summary>
            <param name="reason"></param>
        </member>
        <member name="P:SphereStudio.Base.PausedEventArgs.Reason">
            <summary>
            Gets the reason execution was halted.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IDebugger">
            <summary>
            Specifies the interface for a single-step debugger.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDebugger.FileName">
            <summary>
            Gets the fully qualified path of the source file currently being
            executed.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDebugger.LineNumber">
            <summary>
            Gets the line number of the next instruction to be executed.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDebugger.Running">
            <summary>
            Gets whether the debuggee is currently executing.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.IDebugger.Attached">
            <summary>
            Fires when the debugger is successfully attached.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.IDebugger.Detached">
            <summary>
            Fires when the debugger is detached.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.IDebugger.Resumed">
            <summary>
            Fires when execution resumes.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.IDebugger.Paused">
            <summary>
            Fires when execution pauses (e.g. at a breakpoint).
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.Attach">
            <summary>
            Attaches the debugger.
            </summary>
            <returns>true if the debugger was successfully attached.</returns>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.Detach">
            <summary>
            Detaches the debugger.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.SetBreakpoint(System.String,System.Int32)">
            <summary>
            Sets a breakpoint on a line of code.
            </summary>
            <param name="fileName">The name of the source file containing the breakpoint.</param>
            <param name="lineNumber">The line number of the breakpoint.</param>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.ClearBreakpoint(System.String,System.Int32)">
            <summary>
            Clears an existing breakpoint on a line of code.
            </summary>
            <param name="fileName">The name of the source file containing the breakpoint.</param>
            <param name="lineNumber">The line number of the breakpoint.</param>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.Resume">
            <summary>
            Runs until the next breakpoint is hit or the target terminates,
            whichever comes first.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.Pause">
            <summary>
            Pauses execution and breaks into the debugger.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.StepInto">
            <summary>
            Executes the next line of code, stepping into function calls.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.StepOut">
            <summary>
            Runs until the current function returns.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugger.StepOver">
            <summary>
            Executes the next line of code.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.DockHint">
            <summary>
            Specifies the position of a dock pane.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.DockHint.Float">
            <summary>
            Detaches the pane, making it floating.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.DockHint.Left">
            <summary>
            Docks the pane to the left side.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.DockHint.Right">
            <summary>
            Docks the pane to the right side.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.DockHint.Top">
            <summary>
            Docks the pane to the top.
            </summary>
        </member>
        <member name="F:SphereStudio.Base.DockHint.Bottom">
            <summary>
            Docks the pane to the bottom.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IDockPane">
            <summary>
            Specifies the interface for an IDE dock pane.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDockPane.Control">
            <summary>
            Gets the physical Control providing functionality for this dock pane.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDockPane.DockHint">
            <summary>
            Gets the dock pane's preferred docking position.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDockPane.DockIcon">
            <summary>
            Gets the icon associated with this dock pane.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IDockPane.ShowInViewMenu">
            <summary>
            Gets whether this dock pane should be shown in the View menu.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IEditor`1">
            <summary>
            Specifies the interface for an embedded editor.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IEditor`1.CreateEditView">
            <summary>
            Creates a new embeddable DocumentView for this editor.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SphereStudio.Base.IFileOpener">
            <summary>
            Specifies the interface for a file opener.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IFileOpener.FileExtensions">
            <summary>
            Gets the set of file extensions handled by this plugin (sans dots).
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IFileOpener.FileTypeName">
            <summary>
            Gets the name of the type of file created by this plugin.
            e.g. "Image"
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IFileOpener.FileIcon">
            <summary>
            Gets the icon used for file types handled by this plugin.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IFileOpener.Open(System.String)">
            <summary>
            Opens an existing file.
            </summary>
            <param name="fileName">The filename of the asset to edit.</param>
            <returns>The DocumentView used for editing the file, or null if no document view is needed.</returns>
        </member>
        <member name="T:SphereStudio.Base.INewFileOpener">
            <summary>
            Specifies the interface for a file opener supporting new document creation.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.INewFileOpener.New">
            <summary>
            Creates a new, untitled file.
            </summary>
            <returns>The DocumentView for the new file, or null to cancel document creation.</returns>
        </member>
        <member name="T:SphereStudio.Base.IPlugin">
            <summary>
            Specifies the base interface for a Sphere Studio plugin.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IPluginMain">
            <summary>
            Specifies the interface for a Sphere Studio plugin module.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IPluginMain.Name">
            <summary>
            Gets the display name of the plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IPluginMain.Author">
            <summary>
            Gets the name(s) of the plugin's author(s).
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IPluginMain.Description">
            <summary>
            Gets a one-line description of the plugin.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IPluginMain.Version">
            <summary>
            Gets the plugin's version number string.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IPluginMain.Initialize(SphereStudio.Base.ISettings)">
            <summary>
            Initializes the module. Called by the plugin manager when the plugin is loaded.
            </summary>
            <param name="conf">Allows access to the plugin's user configuration.</param>
        </member>
        <member name="M:SphereStudio.Base.IPluginMain.ShutDown">
            <summary>
            Shuts down the module. Called by the plugin manager when the plugin is unloaded.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IProject">
            <summary>
            Specifies the interface for a Sphere Studio project.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.RootPath">
            <summary>
            Gets the absolute path of the project's root directory.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.BuildPath">
            <summary>
            Gets or sets the path of the build directory. May be a
            relative path.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.Name">
            <summary>
            Gets or sets the name of the project (usually the game title).
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.Author">
            <summary>
            Gets or sets the name of the project's author.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.Summary">
            <summary>
            Gets or sets a short summary/description of the game.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.ScreenWidth">
            <summary>
            Gets or sets the game's default horizontal resolution.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.ScreenHeight">
            <summary>
            Gets or sets the game's default vertical resolution.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IProject.MainScript">
            <summary>
            Gets the filename of the game's startup script, relative to
            'scripts'.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IProject.GetAllBreakpoints">
            <summary>
            Gets a dictionary of all breakpoints set for this project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.IProject.GetBreakpoints(System.String)">
            <summary>
            Gets a list of breakpoints set for a specified file.
            </summary>
            <param name="scriptPath">The fully qualified path of the script to get breakpoints for.</param>
            <returns>An array of line numbers containing breakpoints.</returns>
        </member>
        <member name="M:SphereStudio.Base.IProject.SetBreakpoints(System.String,System.Int32[])">
            <summary>
            Records breakpoints for a specified script file.
            </summary>
            <param name="scriptPath">The fully qualified path of the script with breakpoints.</param>
            <param name="lineNumbers">An array of line numbers with breakpoints.</param>
        </member>
        <member name="T:SphereStudio.Base.ISettings">
            <summary>
            Specifies an interface for reading and writing configuration settings.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ISettings.GetBoolean(System.String,System.Boolean)">
            <summary>
            Reads a boolean value from the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defValue">A default value if the setting doesn't exist.</param>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.ISettings.GetFloat(System.String,System.Double)">
            <summary>
            Reads a floating-point value from the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defValue">A default value if the setting doesn't exist.</param>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.ISettings.GetInteger(System.String,System.Int32)">
            <summary>
            Reads an integer value from the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defValue">A default value if the setting doesn't exist.</param>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.ISettings.GetString(System.String,System.String)">
            <summary>
            Reads a string value from the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defValue">A default value if the setting doesn't exist.</param>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.ISettings.GetStringArray(System.String,System.String[])">
            <summary>
            Reads a list of comma-separated strings from the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defValues">A default array to return if the setting doesn't exist.</param>
        </member>
        <member name="M:SphereStudio.Base.ISettings.SetValue(System.String,System.Object)">
            <summary>
            Writes a value to the settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="value">The value to write.</param>
        </member>
        <member name="T:SphereStudio.Base.ISettingsPage">
            <summary>
            Specifies the interface for a Settings Center page.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ISettingsPage.Control">
            <summary>
            Gets the physical UserControl for this settings page.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ISettingsPage.Apply">
            <summary>
            Applies the settings selected on this settings page.
            </summary>
            <returns>true if the settings were applied successfully.</returns>
        </member>
        <member name="T:SphereStudio.Base.IStarter">
            <summary>
            Specifies the interface for an engine starter. Starters handle launching
            an engine with the proper command line arguments, etc.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IStarter.CanConfigure">
            <summary>
            'true' if this engine supports configuration.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IStarter.Start(System.String,System.Boolean)">
            <summary>
            Starts the engine.
            </summary>
            <param name="gamePath">The pathname of the game or package to launch.</param>
            <param name="isPackage">Pass 'true' if gamePath specifies a package.</param>
        </member>
        <member name="M:SphereStudio.Base.IStarter.Configure">
            <summary>
            Launches the engine's configuration program. Throws an error if the
            engine doesn't support this.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IDebugStarter">
            <summary>
            Specifies the interface for an engine starter supporting single-step
            debugging.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IDebugStarter.Debug(System.String,System.Boolean,SphereStudio.Base.IProject)">
            <summary>
            Starts the engine in single-step debugging mode.
            </summary>
            <param name="gamePath">The pathname of the game or package to launch.</param>
            <param name="isPackage">Pass 'true' if gamePath specifies a package.</param>
            <param name="project">The Sphere Studio project hosting the debugger.</param>
            <returns></returns>
        </member>
        <member name="T:SphereStudio.Base.IStyleProvider">
            <summary>
            Specifies the interface for a plugin providing UI themes.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.IStyleProvider.Styles">
            <summary>
            Gets an array of all the themes provided by the plugin.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SphereStudio.Base.PluginManager">
            <summary>
            Manages Sphere Studio plugins. This is a singleton.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.PluginManager.Register(SphereStudio.Base.IPluginMain,SphereStudio.Base.IPlugin,System.String)">
            <summary>
            Registers a plugin. Plugins add new functionality to the IDE.
            </summary>
            <param name="main">The plugin module doing the registering.</param>
            <param name="plugin">The IPlugin to register.</param>
            <param name="name">The friendly name of the plugin, used in the UI.</param>
        </member>
        <member name="M:SphereStudio.Base.PluginManager.Unregister(SphereStudio.Base.IPlugin)">
            <summary>
            Unregisters a previously registered plugin.
            </summary>
            <param name="plugin">The plugin to unregister.</param>
        </member>
        <member name="M:SphereStudio.Base.PluginManager.UnregisterAll(SphereStudio.Base.IPluginMain)">
            <summary>
            Unregisters all plugins registered by a plugin module.
            </summary>
            <param name="main">The plugin module whose plugins are being unregistered.</param>
        </member>
        <member name="M:SphereStudio.Base.PluginManager.Get``1(System.String)">
            <summary>
            Searches for a plugin by name and returns its interface.
            </summary>
            <typeparam name="T">The type of plugin being requested.</typeparam>
            <param name="name">The registered name of the plugin to find.</param>
            <returns></returns>
        </member>
        <member name="M:SphereStudio.Base.PluginManager.GetNames``1">
            <summary>
            Gets the registered names of all active plugins of a given type.
            </summary>
            <typeparam name="T">The type of plugin to get the names of.</typeparam>
            <returns></returns>
        </member>
        <member name="P:SphereStudio.Base.PluginManager.Core">
            <summary>
            Gets the interface to the Sphere Studio IDE.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.DocumentView">
            <summary>
            Provides a base class for editable documents in Sphere Studio.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.CanSave">
            <summary>
            Gets whether the DocumentView contains saveable content.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.IsDirty">
            <summary>
            Gets whether the document has been edited since the last save.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.HelpText">
            <summary>
            Gets or sets the help text shown in the status bar when this document is
            active. Setter is protected.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.FileExtensions">
            <summary>
            Gets the recommended file extension (sans dot) when saving the document.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.Icon">
            <summary>
            Gets the icon associated with the document.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.ReadOnly">
            <summary>
            Gets or sets whether the document contents are read-only.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.DocumentView.ViewState">
            <summary>
            Gets or sets the current view state of the document. (e.g. caret position,
            current selection, etc.)
            </summary>
        </member>
        <member name="E:SphereStudio.Base.DocumentView.DirtyChanged">
            <summary>
            Fires when the document's 'dirty' status changes.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.NewDocument">
            <summary>
            Sets up the document view for a new file.
            </summary>
            <returns>true if a fresh slate was set up, false otherwise.</returns>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Load(System.String)">
            <summary>
            Loads a file into the document view.
            </summary>
            <param name="filename">The filename of the file to load.</param>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Save(System.String)">
            <summary>
            Saves the contents of the document to a specified filename.
            </summary>
            <param name="filename">The filename to save under.</param>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Restyle">
            <summary>
            Refreshes the document when the UI style has changed.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Activate">
            <summary>
            Notifies the document that it received focus.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Deactivate">
            <summary>
            Notifies the document that it lost focus.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Cut">
            <summary>
            Deletes the selected content and puts it on the clipbord.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Copy">
            <summary>
            Copies the current selection to the clipboard.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Paste">
            <summary>
            Pastes the contents of the clipboard into the document.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Undo">
            <summary>
            Undoes the user's last modification to the document.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.Redo">
            <summary>
            Reverts the last Undo operation. If the document has been modified since the
            last Undo, this does nothing.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.ZoomIn">
            <summary>
            Increases the document zoom level.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.DocumentView.ZoomOut">
            <summary>
            Decreases the document zoom level.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.ImageView">
            <summary>
            Provides a base class for an image editing component.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ImageView.IsDirty">
            <summary>
            Gets or sets whether the image has been modified.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.ImageView.ImageChanged">
            <summary>
            Raised when the image data has been modified.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ImageView.Content">
            <summary>
            Gets or sets the image as it is shown in the document.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ImageView.GetImages(System.Int16,System.Int16)">
            <summary>
            Splits the image editor content into tiles and returns the tile bitmaps
            in an array.
            </summary>
            <param name="tileWidth">The width of the tiles.</param>
            <param name="tileHeight">The height of the tiles.</param>
            <returns>An array of tile bitmaps.</returns>
        </member>
        <member name="T:SphereStudio.Base.ScriptView">
            <summary>
            Provides a base class for a script editing component.
            </summary>
        </member>
        <member name="E:SphereStudio.Base.ScriptView.BreakpointChanged">
            <summary>
            Fires when a breakpoint is added or removed.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ScriptView.ActiveLine">
            <summary>
            Gets or sets the active line, used while debugging.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ScriptView.ErrorLine">
            <summary>
            Gets or sets  the error line, used to point out script errors
            during debugging.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ScriptView.Breakpoints">
            <summary>
            Gets a list of the line numbers of all breakpoints
            set in this script view.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.ScriptView.Text">
            <summary>
            Gets or sets the contents of the script view.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.ScriptView.GoToLine(System.Int32)">
            <summary>
            Moves the cursor to a specified line number, used when debugging.
            </summary>
            <param name="lineNumber">The line number to navigate to.</param>
        </member>
        <member name="M:SphereStudio.Base.ScriptView.OnBreakpointChanged(SphereStudio.Base.BreakpointChangedEventArgs)">
            <summary>
            Fires a BreakpointChanged event for this ScriptView.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:SphereStudio.Base.BreakpointChangedEventArgs">
            <summary>
            Contains data for a BreakpointChanged event.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.BreakpointChangedEventArgs.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes data for a BreakpointSet event.
            </summary>
            <param name="lineNumber"></param>
            <param name="isActive"></param>
        </member>
        <member name="P:SphereStudio.Base.BreakpointChangedEventArgs.Active">
            <summary>
            If Active is true, the breakpoint is set. Otherwise it is cleared.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.BreakpointChangedEventArgs.LineNumber">
            <summary>
            The line number containing the breakpoint.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.IStyleAware">
            <summary>
            Specifies the interface for a style-aware component.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.IStyleAware.ApplyStyle(SphereStudio.Base.UIStyle)">
            <summary>
            Sphere Studio calls this to restyle the component.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.StyleManager">
            <summary>
            Manages and applies UI styles throughout the IDE.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.StyleManager.Style">
            <summary>
            Gets or sets the current UI style for the IDE.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.StyleManager.AutoStyle(SphereStudio.Base.IStyleAware)">
            <summary>
            Registers an IStyleable component to be automatically styled.
            </summary>
            <param name="component">An object implementing IStyleable.</param>
        </member>
        <member name="M:SphereStudio.Base.StyleManager.Refresh">
            <summary>
            Restyles all controls with the current UI style.
            </summary>
        </member>
        <member name="T:SphereStudio.Base.UIStyle">
            <summary>
            Represents a theme used for styling the IDE's UI elements.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.#ctor(System.String)">
            <summary>
            Constructs a new UI style using OS default settings.
            </summary>
            <param name="name">A name to use for the theme.</param>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.Name">
            <summary>
            Gets the display name of the UI style.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.AccentColor">
            <summary>
            Gets or sets the accent color for the UI.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.BackColor">
            <summary>
            Gets or sets the background color for text-based controls.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.FixedFont">
            <summary>
            Gets or sets the font to use for fixed-width text, e.g. JS code.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.Font">
            <summary>
            Gets or sets the font to use for UI elements.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.HighlightColor">
            <summary>
            Gets or sets the color to use for UI text.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.LabelColor">
            <summary>
            Gets or sets the color used for the background of headings.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.TextColor">
            <summary>
            Gets or sets the color to use for UI text.
            </summary>
        </member>
        <member name="P:SphereStudio.Base.UIStyle.ToolColor">
            <summary>
            Gets or sets the color used for UI elements.
            </summary>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.AsAccent(System.Windows.Forms.Control)">
            <summary>
            Styles a control as an accented UI element.
            </summary>
            <param name="control">The control to be styled.</param>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.AsCodeView(System.Windows.Forms.Control)">
            <summary>
            Styles a UI control meant to display code or other fixed-width text.
            </summary>
            <param name="control">The control to be styled.</param>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.AsHeading(System.Windows.Forms.Control)">
            <summary>
            Styles a control as a standard UI element.
            </summary>
            <param name="control">The control to be styled.</param>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.AsTextView(System.Windows.Forms.Control)">
            <summary>
            Styles a control as a text-based UI element.
            </summary>
            <param name="control">The control to be styled.</param>
        </member>
        <member name="M:SphereStudio.Base.UIStyle.AsUIElement(System.Windows.Forms.Control)">
            <summary>
            Styles a control as a standard UI element.
            </summary>
            <param name="control">The control to be styled.</param>
        </member>
        <member name="T:SphereStudio.Utility.BatchEventHandler`1">
            <summary>
            The event handler used for batching files in the DeferredFileSystemWatcher
            </summary>
            <param name="sender">Usually the calling object.</param>
            <param name="eAll">The items.</param>
            <typeparam name="T">The type of the items.</typeparam>
        </member>
        <member name="T:SphereStudio.Utility.DeferredFileSystemWatcher">
            <summary>
            A FileSystemWatcher that only triggers after so long of a delay.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.DeferredFileSystemWatcher.Dispose(System.Boolean)">
            <summary>
            Overrides the default dispose method to dispose the timer.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SphereStudio.Utility.DeferredFileSystemWatcher.#ctor">
            <summary>
            Initializes a new instance of the DeferredFileSystemWatcher.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.DeferredFileSystemWatcher.SynchronizingObject">
            <summary>
            The component whose thread the event delegates will be invoked on.
            </summary>
        </member>
        <member name="E:SphereStudio.Utility.DeferredFileSystemWatcher.Changed">
            <summary>
            Event handler for when a file has been changed.
            </summary>
        </member>
        <member name="E:SphereStudio.Utility.DeferredFileSystemWatcher.Created">
            <summary>
            Event handler for when a file is created.
            </summary>
        </member>
        <member name="E:SphereStudio.Utility.DeferredFileSystemWatcher.Deleted">
            <summary>
            Event handler for when a file has been deleted.
            </summary>
        </member>
        <member name="E:SphereStudio.Utility.DeferredFileSystemWatcher.Renamed">
            <summary>
            Event handler for when a file has been renamed.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.DeferredFileSystemWatcher.Delay">
            <summary>
            Gets or sets how much time, in milliseconds, must pass after the last FileSystemWatcher event
            before batched event(s) are raised.
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.HistoryManager">
            <summary>
            Manages undo/redo history for an editable document.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.#ctor">
            <summary>
            Initializes a new history manager.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.HistoryManager.CanUndo">
            <summary>
            Gets whether an Undo operation can currently be carried out.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.HistoryManager.CanRedo">
            <summary>
            Gets whether a Redo operation can currently be carried out.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.PushPage(SphereStudio.Utility.HistoryPage)">
            <summary>
            Pushes a history page onto the top of the undo stack.
            </summary>
            <param name="page">The HistoryPage to be added.</param>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.Undo">
            <summary>
            Undoes the most recently applied action.
            </summary>
            <returns>true of an undo operation was carried out, false otherwise.</returns>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.Redo">
            <summary>
            Reverts the most recent undo operation.
            </summary>
            <returns>true if a redo operation was carried out, false otherwise.</returns>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.Dispose">
            <summary>
            Performs cleanup for the history manager and all pages in the undo/redo stack.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryManager.Clear">
            <summary>
            Clears all undo/redo history and disposes the history manager.
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.HistoryPage">
            <summary>
            Base class for a history page. History pages represent operations that can be undone or
            redone by a HistoryManager. This is an abstract class.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryPage.Undo">
            <summary>
            Undoes the change represented by the HistoryPage.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryPage.Redo">
            <summary>
            Replays the change represented by the HistoryPage.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.HistoryPage.Dispose">
            <summary>
            Cleans up resources owned by the HistoryPage.
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.BitmapLoader">
            <summary>
            Efficiently loads bitmaps from a filestream.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.BitmapLoader.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new bitmap loader. Which loads bitmaps from filestreams.
            </summary>
            <param name="width">The image width in pixels.</param>
            <param name="height">the image height in pixels.</param>
        </member>
        <member name="M:SphereStudio.Utility.BitmapLoader.BitmapFromDIB(System.IO.MemoryStream)">
            <summary>
            Generates a bitmap from a DIB object.
            </summary>
            <param name="DIBstream">A stream representing a DIB object.</param>
            <returns>A bitmap object.</returns>
        </member>
        <member name="M:SphereStudio.Utility.BitmapLoader.LoadFromStream(System.IO.BinaryReader,System.Int32)">
            <summary>
            Creates a bitmap from a filestream.
            </summary>
            <param name="reader">The System.IO.BinaryReader to use.</param>
            <param name="amount">The size in bytes of the image.</param>
            <returns>A new bitmap object.</returns>
        </member>
        <member name="M:SphereStudio.Utility.BitmapLoader.Close">
            <summary>
            Closes and releases any resources being used.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.BitmapLoader.ColorFormat">
            <summary>
            Gets or sets the color format.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.BitmapLoader.Dispose">
            <summary>
            Disposes and clears all data.
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.BitmapSaver">
            <summary>
            Saves bitmap to a filestream.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.BitmapSaver.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a bitmap saver, which saves bitmaps to filestreams.
            </summary>
            <param name="width">The image width in pixels.</param>
            <param name="height">The image height in pixels.</param>
        </member>
        <member name="M:SphereStudio.Utility.BitmapSaver.SaveToStream(System.Drawing.Bitmap,System.IO.BinaryWriter)">
            <summary>
            Saves the image to a filestream.
            </summary>
            <param name="image">The image to save.</param>
            <param name="writer">The System.IO.BinaryWriter to use.</param>
        </member>
        <member name="T:SphereStudio.Utility.FastBitmap">
            <summary>
            Used to efficiently and quickly manipulate bitmaps.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.#ctor(System.Drawing.Bitmap)">
            <summary>
            Creates a FastBitmap wrapper for an image object.
            </summary>
            <param name="img">The image object to wrap.</param>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.LockImage">
            <summary>
            Locks the image to get it ready for fast manipluations.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            Gets a pixel at the x/y location.
            </summary>
            <param name="x">The x pixel location.</param>
            <param name="y">The y pixel location.</param>
            <returns>The Color at the x/y location.</returns>
            <exception cref="T:System.Exception">Invalid color format.</exception>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets a pixel at the x/y location to the new color.
            </summary>
            <param name="x">The x pixel location.</param>
            <param name="y">The y pixel location.</param>
            <param name="color">The color to set the pixel to.</param>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.UnlockImage">
            <summary>
            Unlocks the image.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.Clone">
            <summary>
            Creates a clone of the wrapped image object.
            </summary>
            <returns>A copy of the image object.</returns>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Grabs a sub-section clone of the wrapped image.
            </summary>
            <param name="rect">The rectangle to cut from.</param>
            <param name="format">The PixelFomat to use.</param>
            <returns>A sub-bitmap object.</returns>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Grabs a sub-section clone of the wrapped image.
            </summary>
            <param name="rect">The rectangle to cut from.</param>
            <param name="format">The PixelFomat to use.</param>
            <returns>A sub-bitmap object.</returns>
        </member>
        <member name="P:SphereStudio.Utility.FastBitmap.Width">
            <summary>
            Gets the width of the wrapped Image.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.FastBitmap.Height">
            <summary>
            Gets the height of the wrapped Image.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.FastBitmap.Image">
            <summary>
            Gets or sets the image wrapped by this.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.FastBitmap.ColorFormat">
            <summary>
            Gets or sets the Color format used by this.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.ReplaceColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Replaces an old color with a new color.
            </summary>
            <param name="oldC">The color in the image to edit.</param>
            <param name="newC">The color to replace with.</param>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.Grayscale">
            <summary>
            Converts the image to a grayscale representation.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.FlattenAlpha">
            <summary>
            Sets all transparency to max value.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.FloodFill(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Replaces the colors of a particular area:
            </summary>
            <param name="x">start x</param>
            <param name="y">start y</param>
            <param name="newColor">color to replace with</param>
            <returns>rectangle of the affetced area.</returns>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.ColorsEqual(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Determines if two colors equal.
            </summary>
            <param name="col1">The color to compare.</param>
            <param name="col2">The color to compare against.</param>
            <returns>True if they field-wise match.</returns>
        </member>
        <member name="M:SphereStudio.Utility.FastBitmap.DrawImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Draws another bitmap into this image using straight-up pixel data.
            Not as fast as the Graphics.DrawImage();
            </summary>
            <param name="img">The source image.</param>
            <param name="x">x location in pixels.</param>
            <param name="y">y location in pixels.</param>
        </member>
        <member name="T:SphereStudio.Utility.PixelData">
            <summary>
            Pixel data of an image.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.PixelData.r">
            <summary>
            Red component.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.PixelData.g">
            <summary>
            Green component.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.PixelData.b">
            <summary>
            Blue component.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.PixelData.a">
            <summary>
            Alpha component
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.ColorFormat">
            <summary>
            A color format for loading/saving color data.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.ColorFormat.FormatARGB">
            <summary>
            ARGB style.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.ColorFormat.FormatRGBA">
            <summary>
            RGBA style.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.ColorFormat.FormatBGRA">
            <summary>
            BGRA style.
            </summary>
        </member>
        <member name="F:SphereStudio.Utility.ColorFormat.FormatABGR">
            <summary>
            ABGR style.
            </summary>
        </member>
        <member name="T:SphereStudio.Utility.Line">
            <summary>
            Represents a line segment with two endpoints.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.Line.#ctor">
            <summary>
            Creates a new, empty Line.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.Line.#ctor(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Creates a line with some values.
            </summary>
            <param name="x1">The start x.</param>
            <param name="y1">The start y.</param>
            <param name="x2">The end x.</param>
            <param name="y2">The end y.</param>
        </member>
        <member name="M:SphereStudio.Utility.Line.#ctor(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Creates a line with some values.
            </summary>
            <param name="start">The start Point.</param>
            <param name="end">The end Point.</param>
        </member>
        <member name="M:SphereStudio.Utility.Line.#ctor(SphereStudio.Utility.Line)">
            <summary>
            Creates a line from another line.
            </summary>
            <param name="copy">The other line to copy from.</param>
        </member>
        <member name="P:SphereStudio.Utility.Line.X1">
            <summary>
            Gets or sets the starting x value.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.Line.Y1">
            <summary>
            Gets or sets the starting y value.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.Line.X2">
            <summary>
            Gets or sets the ending x value.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.Line.Y2">
            <summary>
            Gets or sets the ending y value.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.Line.Start">
            <summary>
            Gets or sets the start location of this Line.
            </summary>
        </member>
        <member name="P:SphereStudio.Utility.Line.End">
            <summary>
            Gets or sets the end location of this Line.
            </summary>
        </member>
        <member name="M:SphereStudio.Utility.Line.DrawLine(System.Drawing.Graphics,System.Drawing.Pen)">
            <summary>
            Draws this line to the System.Drawing.Graphics.
            </summary>
            <param name="g">The System.Drawing.graphics to use.</param>
            <param name="pen">The pen style to use.</param>
        </member>
        <member name="M:SphereStudio.Utility.Line.ToRectangle(SphereStudio.Utility.Line)">
            <summary>
            Grabs the area of a Line.
            </summary>
            <param name="l">The line to convert</param>
            <returns>A System.Drawing.Rectangle of the area of this Line.</returns>
        </member>
        <member name="M:SphereStudio.Utility.Line.ToRectangle">
            <summary>
            Grabs the area of this Line.
            </summary>
            <returns>A System.Drawing.Rectangle of the area of this Line.</returns>
        </member>
        <member name="T:SphereStudio.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.BarImage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.editbg2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.person">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:SphereStudio.Properties.Resources.trigger">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:SphereStudio.Debugging.CodeLocation">
            <summary>
            Describes a location (line and column) in a source file.
            </summary>
        </member>
        <member name="F:SphereStudio.Debugging.CodeLocation.FileName">
            <summary>
            The file name of the source file.
            </summary>
        </member>
        <member name="F:SphereStudio.Debugging.CodeLocation.Line">
            <summary>
            The line number within the code.
            </summary>
        </member>
        <member name="F:SphereStudio.Debugging.CodeLocation.Column">
            <summary>
            The column number within the line.
            </summary>
        </member>
        <member name="T:SphereStudio.Debugging.SourceMapper">
            <summary>
            Facilitates debugging by translating code locations using a V3 source map.
            </summary>
        </member>
        <member name="M:SphereStudio.Debugging.SourceMapper.#ctor">
            <summary>
            Constructs a new SourceMapper.
            </summary>
        </member>
        <member name="M:SphereStudio.Debugging.SourceMapper.AddSource(System.String,System.String)">
            <summary>
            Adds a JS file and associated source map to the mapper.
            </summary>
            <param name="fileName">The filename of a transpiled target file (NOT the source file).</param>
            <param name="mapJson">The JSON text of the V3 source map.</param>
        </member>
        <member name="M:SphereStudio.Debugging.SourceMapper.Contains(System.String)">
            <summary>
            Finds out whether the mapper has an entry for a specified module.
            </summary>
            <param name="fileName">The filename of the transpiled target file.</param>
        </member>
        <member name="M:SphereStudio.Debugging.SourceMapper.LineInSource(System.String,System.Int32)">
            <summary>
            Maps a line number in a transpiled file to its original line number in the source code.
            </summary>
            <param name="fileName">The filename of the transpiled target file.</param>
            <param name="lineNumber">A line number in the transpiled code.</param>
            <returns>The corresponding line number in the original source code.</returns>
        </member>
        <member name="M:SphereStudio.Debugging.SourceMapper.LineInTarget(System.String,System.Int32)">
            <summary>
            Maps a source line number back to its line number in the transpiled code.
            </summary>
            <param name="fileName">The filename of the transpiled target file.</param>
            <param name="lineNumber">A line number in the original source code.</param>
            <returns>The corresponding line number in the transpiled code.</returns>
        </member>
        <member name="T:SphereStudio.Versioning">
            <summary>
            Provides versioning information for Sphere Studio.
            </summary>
        </member>
        <member name="F:SphereStudio.Versioning.Name">
            <summary>
            The name of the IDE, "Sphere Studio".
            </summary>
        </member>
        <member name="F:SphereStudio.Versioning.Author">
            <summary>
            The name of the IDE author or supporting company.
            </summary>
        </member>
        <member name="F:SphereStudio.Versioning.Version">
            <summary>
            The version number of the IDE.
            </summary>
        </member>
        <member name="F:SphereStudio.Versioning.Copyright">
            <summary>
            A string indicating the copyright holder and date of copyright.
            </summary>
        </member>
        <member name="F:SphereStudio.Versioning.Credits">
            <summary>
            A short description of the IDE along with a list of contributors.
            </summary>
        </member>
    </members>
</doc>
